{"version":3,"file":"js/740.ce7c250e.js","mappings":"gOAWM,MAAOA,UAAuBC,EAAAA,GAClCC,yBAAyBC,GACvB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,UAAUC,YAAYC,oBACpBC,IACEL,EAAQK,EAAI,IAEdC,IACEL,EAAOK,EAAI,GACZC,OAAAC,OAAA,CAECC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GACTb,GAEN,GAEL,CAEAD,oBACEC,EACAc,GAEA,MAAMC,EAAKX,UAAUC,YAAYW,eAC/BT,IACEO,EAASP,EAAI,IAEfC,IACEM,EAAS,KAAMN,EAAI,GACpBC,OAAAC,OAAA,CAECC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GACTb,IAIP,MAAO,GAAGe,GACZ,CAEAhB,iBAAiBC,GACfiB,OAAOb,UAAUC,YAAYa,WAAWC,SAASnB,EAAQe,GAAI,IAC/D,CAEAhB,yBACE,GAAyB,qBAAdK,YAA8BA,UAAUgB,YACjD,MAAMC,KAAKC,YAAY,iDAGzB,MAAMC,QAAmBN,OAAOb,UAAUgB,YAAYI,MAAM,CAC1DC,KAAM,gBAER,MAAO,CAAEC,SAAUH,EAAWI,MAAOC,eAAgBL,EAAWI,MAClE,CAEA5B,2BACE,MAAMsB,KAAKQ,cAAc,0BAC3B,EAGF,MAAMC,EAAc,IAAIjC,C","sources":["webpack://disaster-relief/../../src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CallbackID,\n  GeolocationPlugin,\n  PermissionStatus,\n  Position,\n  PositionOptions,\n  WatchPositionCallback,\n} from './definitions';\n\nexport class GeolocationWeb extends WebPlugin implements GeolocationPlugin {\n  async getCurrentPosition(options?: PositionOptions): Promise<Position> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          resolve(pos);\n        },\n        err => {\n          reject(err);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 10000,\n          maximumAge: 0,\n          ...options,\n        },\n      );\n    });\n  }\n\n  async watchPosition(\n    options: PositionOptions,\n    callback: WatchPositionCallback,\n  ): Promise<CallbackID> {\n    const id = navigator.geolocation.watchPosition(\n      pos => {\n        callback(pos);\n      },\n      err => {\n        callback(null, err);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0,\n        ...options,\n      },\n    );\n\n    return `${id}`;\n  }\n\n  async clearWatch(options: { id: string }): Promise<void> {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation',\n    });\n    return { location: permission.state, coarseLocation: permission.state };\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n\nconst Geolocation = new GeolocationWeb();\n\nexport { Geolocation };\n"],"names":["GeolocationWeb","WebPlugin","async","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","callback","id","watchPosition","window","clearWatch","parseInt","permissions","this","unavailable","permission","query","name","location","state","coarseLocation","unimplemented","Geolocation"],"sourceRoot":""}